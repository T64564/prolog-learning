% tokenize(+CharCodes, -Tokens)
%  breaks a list of character codes into a list of tokens.
tokenize([], []).

tokenize([CharCode | RestCodes], Tokens) :- % a blank
  char_type(CharCode, space),
  !,
  tokenize(RestCodes, Tokens).

tokenize([CharCode | CharCodes], [Word | Tokens]) :-
  char_type(CharCode, alnum), % an alphanumical
  !,
  make_word([CharCode | CharCodes], alnum, WordCodes, RestCodes),
  name(Word, WordCodes),
  tokenize(RestCodes, Tokens).

tokenize([CharCode | CharCodes], [Char | Tokens]) :- % other
  !,
  name(Char, [CharCode]),
  tokenize(CharCodes, Tokens).

% make_word(+CharCodes, +Type, -WordCodes, -RestCodes)
make_word([CharCode1, CharCode2 | CharCodes], alnum,
[CharCode1 | WordCodes], RestCodes) :-
  char_type(CharCode2, alnum),
  !,
  make_word([CharCode2 | CharCodes], alnum, WordCodes,
  RestCodes).
make_word([CharCode | RestCodes], alnum, [CharCode],
RestCodes).
